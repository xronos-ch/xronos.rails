<%= javascript_tag "var AUTH_TOKEN = #{form_authenticity_token.inspect};" if protect_against_forgery? %>
<%= stylesheet_link_tag 'application' %>
<%= javascript_include_tag "jquery", "highcharts", "modules/exporting" %>
	<style> 
	#sortable { list-style-type: none; margin: 0; padding: 0; width: 10%; }
	#sortable li { margin: 0 3px 3px 3px; padding: 0.4em; padding-left: 1.5em; background: #ffffff}
	#sortable li span { position: absolute; margin-left: -1.3em;}
	</style> 

<div id="calib_chart" style="width: 800px; height: 500px; margin-top: -60px;"></div>  

<script type="text/javascript" charset="utf-8">  
//$(function () {  
  var chart = new Highcharts.Chart({
    exporting:
    {
      url: '/samples/export_chart?authenticity_token='+encodeURIComponent(AUTH_TOKEN)
    },
    chart: { renderTo: 'calib_chart',
             defaultSeriesType: 'area',
             alignTicks: false,
             shadow: true
    },  
    tooltip: {
      enabled: true,
      formatter: function() {
        return Highcharts.dateFormat ( '%Y', this.x);
      }
    },
    plotOptions: {
       area: {
          marker: {
             enabled: false,
             symbol: 'circle',
             radius: 2,
             states: {
                hover: {
                   enabled: true
                }
             }
          }
       },
       line: {
          marker: {
             enabled: false,
             symbol: 'circle',
             radius: 2,
             symbol: 'circle',
             radius: 2,
             states: {
                hover: {
                   enabled: true
                }
             }
          }
       }       
    },
    series: [{
      type: 'area',
      name: 'Sum Calibration',
      pointInterval: <%= @likelihood_res.to_i.year * 1000 %>,
      pointStart: <%= @likelihood_start.to_i * 1000 %>,
      data: [<%=@data.join(", ")%>],
      color: '#7a90a1'
    },
    {
      type: 'line',
      name: '1' + String.fromCharCode(963),
      pointInterval: <%= @likelihood_res.to_i.year * 1000 %>,
      pointStart: <%= @likelihood_start.to_i * 1000 %>, 
      data: [<%=@one_sigma_range.join(", ")%>],
      color: '#AA4643'
    },
    {
      type: 'line',
      name: '2' + String.fromCharCode(963),
      pointInterval: <%= @likelihood_res.to_i.year * 1000 %>,
      pointStart: <%= @likelihood_start.to_i * 1000 %>, 
      data: [<%=@two_sigma_range.join(", ")%>],
      color: '#DB843D'
    },
    {
    type: 'line',
    yAxis: 1,
    name: 'Calibration Curve, upper and lower 1-'+ String.fromCharCode(963) + ' band',
    data: [<%=@calib_upper_out%>],
    color: '#4572A7'
    },
    {
    type: 'line',
    yAxis: 1,
    data: [<%=@calib_lower_out%>],
    color: '#4572A7',
    showInLegend: false
    }
    ],
    xAxis: {
      type: 'datetime',
      minorTickInterval: <%=50.years.to_i * 1000%>,
      minorTickWidth: 1,
      minorTickLength: 3,
      minorGridLineWidth: 0,
      minorTickColor: '#C0D0E0',
      title: {
            text: 'Calibrated dates',
         }
    },
    title: {
      text: 'Sum Calibration',
      align: 'right',
      x: -70
    },
    subtitle: {
      text: '<%=@curve%><br><%#= @log.gsub(/\n/, '<br>') %>',
      align: 'right',
      x: -70,
      style: {
        fontSize:9
      }
    },
    credits: {
        text: 'radon.ufg.uni-kiel.de',
        href: 'http://radon.ufg.uni-kiel.de'
    },
    yAxis: [{ // Primary yAxis
         gridLineWidth: 0,
         labels: {
            formatter: function() {
               return this.value;
            },
            style: {
               color: '#7a90a1'
            }
         },
         title: {
            text: 'Probability',
            style: {
               color: '#7a90a1'
            }
         },
         opposite: true,
         endOnTick:false,
         startOnTick:false,
         minPadding: 0.05,
         maxPadding: 0.95
         
      }, { // Secondary yAxis
         gridLineWidth: 1,
         title: {
            text: 'BP',
            style: {
               color: '#4572A7'
            }
         },
         labels: {
            formatter: function() {
               return this.value;
            },
            style: {
               color: '#4572A7'
            },
         },
         
         startOnTick: false,
         endOnTick:false,
         minPadding: 0.8,
         maxPadding: 0
      }]
  });  
//});


useNarrowExtremes = true;
function setExtremes(useNarrowExtremes) {
var xAxis = chart.series[0].xAxis,
extremes = xAxis.getExtremes(),
span = extremes.max - extremes.min,
center = (extremes.min + extremes.max) / 2,
newMin = Date.UTC($('#min').val(), 0, 0)
newMax = Date.UTC($('#max').val(),0,0);

if (useNarrowExtremes) xAxis.setExtremes(newMin, newMax);
else xAxis.setExtremes();
useNarrowExtremes = !useNarrowExtremes;
} 
</script>
min:<%=text_field_tag("min") %> max:<%=text_field_tag("max") %> <%= link_to "Set Min/Max", "#", onclick: "setExtremes(true);", class: "btn btn-info"%> <%= link_to "Reset Zoom", "#", onclick: "setExtremes(false);", class: "btn btn-info"%>
